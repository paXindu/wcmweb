{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\WMS\\\\wcmweb\\\\src\\\\pages\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { firestore } from '../firebase';\nimport 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapApp() {\n  _s();\n  const [location, setLocation] = useState(null);\n  useEffect(() => {\n    // Fetch geolocation data from Firestore\n    const db = firestore();\n    db.collection('locations').doc('BLfHL4o3zfcNbnmOfvmP').get().then(doc => {\n      if (doc.exists) {\n        const {\n          latitude,\n          longitude\n        } = doc.data();\n        setLocation({\n          coords: {\n            latitude,\n            longitude\n          }\n        });\n      } else {\n        console.error('No location data found');\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const handleLocationClick = () => {\n    if (location) {\n      const {\n        latitude,\n        longitude\n      } = location.coords;\n      const url = `https://www.google.com/maps/search/?api=1&query=${latitude},${longitude}`;\n      window.open(url, '_blank');\n    } else {\n      console.error('Location data not available');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your current location is: \", location ? `${location.coords.latitude}, ${location.coords.longitude}` : 'Unknown']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLocationClick,\n      children: \"Open in Google Maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(MapApp, \"PTP6gujMiAtYQq3RoMoVBEZNym0=\");\n_c = MapApp;\nvar _c;\n$RefreshReg$(_c, \"MapApp\");","map":{"version":3,"names":["React","useState","useEffect","firestore","jsxDEV","_jsxDEV","MapApp","_s","location","setLocation","db","collection","doc","get","then","exists","latitude","longitude","data","coords","console","error","catch","handleLocationClick","url","window","open","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["F:/projects/WMS/wcmweb/src/pages/MapView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { firestore } from '../firebase';\r\nimport 'firebase/firestore';\r\n\r\n\r\n\r\nexport default function MapApp() {\r\n    const [location, setLocation] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch geolocation data from Firestore\r\n        const db = firestore();\r\n        db.collection('locations')\r\n            .doc('BLfHL4o3zfcNbnmOfvmP')\r\n            .get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    const { latitude, longitude } = doc.data();\r\n                    setLocation({ coords: { latitude, longitude } });\r\n                } else {\r\n                    console.error('No location data found');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    }, []);\r\n\r\n    const handleLocationClick = () => {\r\n        if (location) {\r\n            const { latitude, longitude } = location.coords;\r\n            const url = `https://www.google.com/maps/search/?api=1&query=${latitude},${longitude}`;\r\n            window.open(url, '_blank');\r\n        } else {\r\n            console.error('Location data not available');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <p>Your current location is: {location ? `${location.coords.latitude}, ${location.coords.longitude}` : 'Unknown'}</p>\r\n            <button onClick={handleLocationClick}>Open in Google Maps</button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI5B,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,EAAE,GAAGP,SAAS,EAAE;IACtBO,EAAE,CAACC,UAAU,CAAC,WAAW,CAAC,CACrBC,GAAG,CAAC,sBAAsB,CAAC,CAC3BC,GAAG,EAAE,CACLC,IAAI,CAACF,GAAG,IAAI;MACT,IAAIA,GAAG,CAACG,MAAM,EAAE;QACZ,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGL,GAAG,CAACM,IAAI,EAAE;QAC1CT,WAAW,CAAC;UAAEU,MAAM,EAAE;YAAEH,QAAQ;YAAEC;UAAU;QAAE,CAAC,CAAC;MACpD,CAAC,MAAM;QACHG,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;IACJ,CAAC,CAAC,CACDC,KAAK,CAACD,KAAK,IAAI;MACZD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAC9B,IAAIf,QAAQ,EAAE;MACV,MAAM;QAAEQ,QAAQ;QAAEC;MAAU,CAAC,GAAGT,QAAQ,CAACW,MAAM;MAC/C,MAAMK,GAAG,GAAI,mDAAkDR,QAAS,IAAGC,SAAU,EAAC;MACtFQ,MAAM,CAACC,IAAI,CAACF,GAAG,EAAE,QAAQ,CAAC;IAC9B,CAAC,MAAM;MACHJ,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;IAChD;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,GAAG,4BAA0B,EAACnB,QAAQ,GAAI,GAAEA,QAAQ,CAACW,MAAM,CAACH,QAAS,KAAIR,QAAQ,CAACW,MAAM,CAACF,SAAU,EAAC,GAAG,SAAS;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACrH1B,OAAA;MAAQ2B,OAAO,EAAET,mBAAoB;MAAAI,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChE;AAEd;AAACxB,EAAA,CAtCuBD,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}