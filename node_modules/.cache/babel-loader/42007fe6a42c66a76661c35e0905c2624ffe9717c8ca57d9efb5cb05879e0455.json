{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nfunction MapApp() {\n  _s();\n  const [location, setLocation] = useState(null);\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setLocation(position);\n      }, error => {\n        console.error(error);\n      });\n    } else {\n      console.error('Geolocation not available');\n    }\n  }, []);\n\n  // ...\n}\n_s(MapApp, \"PTP6gujMiAtYQq3RoMoVBEZNym0=\");\n_c = MapApp;\nvar _c;\n$RefreshReg$(_c, \"MapApp\");","map":{"version":3,"names":["React","useState","useEffect","MapApp","_s","location","setLocation","navigator","geolocation","getCurrentPosition","position","error","console","_c","$RefreshReg$"],"sources":["F:/projects/WMS/wcmweb/src/pages/MapView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction MapApp() {\r\n    const [location, setLocation] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if ('geolocation' in navigator) {\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                setLocation(position);\r\n            }, error => {\r\n                console.error(error);\r\n            });\r\n        } else {\r\n            console.error('Geolocation not available');\r\n        }\r\n    }, []);\r\n\r\n    // ...\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,IAAI,aAAa,IAAIK,SAAS,EAAE;MAC5BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,QAAQ,IAAI;QACjDJ,WAAW,CAACI,QAAQ,CAAC;MACzB,CAAC,EAAEC,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB,CAAC,CAAC;IACN,CAAC,MAAM;MACHC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAC;IAC9C;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;AACJ;AAACP,EAAA,CAhBQD,MAAM;AAAAU,EAAA,GAANV,MAAM;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}