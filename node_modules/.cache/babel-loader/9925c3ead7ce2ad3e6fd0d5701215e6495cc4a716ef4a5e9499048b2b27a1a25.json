{"ast":null,"code":"import { collection, getDocs } from \"firebase/firestore\";\nimport { firestore } from '../firebase';\nimport { useState } from 'react';\nconst [todos, setTodos] = useState([]);\nconst Fetch = async () => {\n  await getDocs(collection(firestore, \"locations\")).then(querySnapshot => {\n    const newData = querySnapshot.docs.map(doc => ({\n      ...doc.data(),\n      id: doc.id\n    }));\n    setTodos(newData);\n    console.log(todos, newData);\n  });\n};\n_c = Fetch;\nuseEffect(() => {\n  Fetch();\n}, []);\nvar _c;\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"names":["collection","getDocs","firestore","useState","todos","setTodos","Fetch","then","querySnapshot","newData","docs","map","doc","data","id","console","log","_c","useEffect","$RefreshReg$"],"sources":["F:/projects/WMS/wcmweb/src/pages/readdata.js"],"sourcesContent":["import { collection, getDocs } from \"firebase/firestore\";\r\nimport { firestore } from '../firebase';\r\nimport { useState } from 'react';\r\n\r\nconst [todos, setTodos] = useState([]);\r\n\r\nconst Fetch = async () => {\r\n\r\n    await getDocs(collection(firestore, \"locations\"))\r\n        .then((querySnapshot) => {\r\n            const newData = querySnapshot.docs\r\n                .map((doc) => ({ ...doc.data(), id: doc.id }));\r\n            setTodos(newData);\r\n            console.log(todos, newData);\r\n        })\r\n\r\n}\r\n\r\nuseEffect(() => {\r\n    Fetch();\r\n}, [])"],"mappings":"AAAA,SAASA,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACxD,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAEhC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;AAEtC,MAAMG,KAAK,GAAG,MAAAA,CAAA,KAAY;EAEtB,MAAML,OAAO,CAACD,UAAU,CAACE,SAAS,EAAE,WAAW,CAAC,CAAC,CAC5CK,IAAI,CAAEC,aAAa,IAAK;IACrB,MAAMC,OAAO,GAAGD,aAAa,CAACE,IAAI,CAC7BC,GAAG,CAAEC,GAAG,KAAM;MAAE,GAAGA,GAAG,CAACC,IAAI,EAAE;MAAEC,EAAE,EAAEF,GAAG,CAACE;IAAG,CAAC,CAAC,CAAC;IAClDT,QAAQ,CAACI,OAAO,CAAC;IACjBM,OAAO,CAACC,GAAG,CAACZ,KAAK,EAAEK,OAAO,CAAC;EAC/B,CAAC,CAAC;AAEV,CAAC;AAAAQ,EAAA,GAVKX,KAAK;AAYXY,SAAS,CAAC,MAAM;EACZZ,KAAK,EAAE;AACX,CAAC,EAAE,EAAE,CAAC;AAAA,IAAAW,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}