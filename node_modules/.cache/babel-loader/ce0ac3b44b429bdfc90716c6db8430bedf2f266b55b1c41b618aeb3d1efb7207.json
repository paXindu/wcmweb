{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\WMS\\\\full app\\\\wcmweb\\\\src\\\\pages\\\\readdata.js\",\n  _s = $RefreshSig$();\nimport { collection, getDocs, updateDoc, doc } from \"firebase/firestore\";\nimport { firestore } from \"../firebase\";\nimport { useState, useEffect } from \"react\";\nimport Quagga from \"quagga\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mapdata() {\n  _s();\n  const [locations, setLocations] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [showScanner, setShowScanner] = useState(false);\n  const fetchLocations = async () => {\n    const querySnapshot = await getDocs(collection(firestore, \"locations\"));\n    const locationsData = querySnapshot.docs.map(doc => ({\n      ...doc.data(),\n      id: doc.id\n    }));\n    setLocations(locationsData);\n    console.log(locationsData);\n  };\n  useEffect(() => {\n    fetchLocations();\n  }, []);\n  const handleClick = location => {\n    window.location.href = location.lola;\n  };\n  const handleButtonClick = () => {\n    setShowScanner(true);\n    setInputValue(\"\"); // Reset the input value when showing the scanner\n  };\n\n  useEffect(() => {\n    if (showScanner) {\n      Quagga.init({\n        inputStream: {\n          name: \"Live\",\n          type: \"LiveStream\",\n          target: document.querySelector(\"#scanner-container\")\n        },\n        decoder: {\n          readers: [\"ean_reader\"]\n        }\n      }, function (err) {\n        if (err) {\n          console.log(err);\n          return;\n        }\n        console.log(\"Initialization finished. Ready to start\");\n        Quagga.start();\n      });\n      Quagga.onDetected(data => {\n        setInputValue(data.codeResult.code);\n        Quagga.stop();\n        setShowScanner(false);\n        handleUpdateCondition(data.codeResult.code); // Call handleUpdateCondition with the scanned code\n      });\n\n      return () => {\n        Quagga.stop();\n      };\n    }\n  }, [showScanner]);\n  const handleUpdateCondition = async scannedCode => {\n    const locationRef = doc(firestore, \"locations\", scannedCode);\n    const querySnapshot = await getDocs(locationRef);\n    if (querySnapshot.empty) {\n      console.log(\"Location not found\");\n      return;\n    }\n    const locationData = querySnapshot.docs[0].data();\n    if (locationData.condition === \"full\") {\n      await updateDoc(locationRef, {\n        condition: \"normal\"\n      });\n      console.log(\"Condition updated to normal\");\n    } else {\n      console.log(\"Condition is not full\");\n    }\n    fetchLocations(); // Fetch updated locations data\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Locations:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mb-4\",\n      children: [showScanner ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"scanner-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick,\n        className: \"py-2 px-4 bg-blue-500 hover:bg-blue-600 text-white rounded-lg shadow-md\",\n        children: \"Scan QR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), showScanner && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowScanner(false),\n        className: \"py-2 px-4 bg-red-500 hover:bg-red-600 text-white rounded-lg shadow-md ml-4\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: locations.map(location => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleClick(location),\n        className: \"py-2 px-4 rounded-lg shadow-md border border-gray-300 hover:bg-gray-100 cursor-pointer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: location.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), \" \", location.condition, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateCondition(location.id),\n          className: \"py-1 px-2 ml-2 bg-green-500 hover:bg-green-600 text-white rounded-lg shadow-md\",\n          children: \"Full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, location.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Mapdata, \"zCYH0Xia0n9rRK1y8a3J2o9l2Vc=\");\n_c = Mapdata;\nvar _c;\n$RefreshReg$(_c, \"Mapdata\");","map":{"version":3,"names":["collection","getDocs","updateDoc","doc","firestore","useState","useEffect","Quagga","jsxDEV","_jsxDEV","Mapdata","_s","locations","setLocations","inputValue","setInputValue","showScanner","setShowScanner","fetchLocations","querySnapshot","locationsData","docs","map","data","id","console","log","handleClick","location","window","href","lola","handleButtonClick","init","inputStream","name","type","target","document","querySelector","decoder","readers","err","start","onDetected","codeResult","code","stop","handleUpdateCondition","scannedCode","locationRef","empty","locationData","condition","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["F:/projects/WMS/full app/wcmweb/src/pages/readdata.js"],"sourcesContent":["import { collection, getDocs, updateDoc, doc } from \"firebase/firestore\";\r\nimport { firestore } from \"../firebase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Quagga from \"quagga\";\r\n\r\nexport default function Mapdata() {\r\n  const [locations, setLocations] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [showScanner, setShowScanner] = useState(false);\r\n\r\n  const fetchLocations = async () => {\r\n    const querySnapshot = await getDocs(collection(firestore, \"locations\"));\r\n    const locationsData = querySnapshot.docs.map((doc) => ({\r\n      ...doc.data(),\r\n      id: doc.id,\r\n    }));\r\n    setLocations(locationsData);\r\n    console.log(locationsData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLocations();\r\n  }, []);\r\n\r\n  const handleClick = (location) => {\r\n    window.location.href = location.lola;\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    setShowScanner(true);\r\n    setInputValue(\"\"); // Reset the input value when showing the scanner\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showScanner) {\r\n      Quagga.init(\r\n        {\r\n          inputStream: {\r\n            name: \"Live\",\r\n            type: \"LiveStream\",\r\n            target: document.querySelector(\"#scanner-container\"),\r\n          },\r\n          decoder: {\r\n            readers: [\"ean_reader\"],\r\n          },\r\n        },\r\n        function (err) {\r\n          if (err) {\r\n            console.log(err);\r\n            return;\r\n          }\r\n          console.log(\"Initialization finished. Ready to start\");\r\n          Quagga.start();\r\n        }\r\n      );\r\n\r\n      Quagga.onDetected((data) => {\r\n        setInputValue(data.codeResult.code);\r\n        Quagga.stop();\r\n        setShowScanner(false);\r\n        handleUpdateCondition(data.codeResult.code); // Call handleUpdateCondition with the scanned code\r\n      });\r\n\r\n      return () => {\r\n        Quagga.stop();\r\n      };\r\n    }\r\n  }, [showScanner]);\r\n\r\n  const handleUpdateCondition = async (scannedCode) => {\r\n    const locationRef = doc(firestore, \"locations\", scannedCode);\r\n    const querySnapshot = await getDocs(locationRef);\r\n\r\n    if (querySnapshot.empty) {\r\n      console.log(\"Location not found\");\r\n      return;\r\n    }\r\n\r\n    const locationData = querySnapshot.docs[0].data();\r\n    if (locationData.condition === \"full\") {\r\n      await updateDoc(locationRef, { condition: \"normal\" });\r\n      console.log(\"Condition updated to normal\");\r\n    } else {\r\n      console.log(\"Condition is not full\");\r\n    }\r\n\r\n    fetchLocations(); // Fetch updated locations data\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto\">\r\n      <h1 className=\"text-3xl font-bold mb-4\">Locations:</h1>\r\n      <div className=\"flex items-center mb-4\">\r\n        {showScanner ? (\r\n          <div id=\"scanner-container\"></div>\r\n        ) : (\r\n          <button\r\n            onClick={handleButtonClick}\r\n            className=\"py-2 px-4 bg-blue-500 hover:bg-blue-600 text-white rounded-lg shadow-md\"\r\n          >\r\n            Scan QR\r\n          </button>\r\n        )}\r\n        {showScanner && (\r\n          <button\r\n            onClick={() => setShowScanner(false)}\r\n            className=\"py-2 px-4 bg-red-500 hover:bg-red-600 text-white rounded-lg shadow-md ml-4\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        )}\r\n      </div>\r\n      <ul>\r\n        {locations.map((location) => (\r\n          <li\r\n            key={location.id}\r\n            onClick={() => handleClick(location)}\r\n            className=\"py-2 px-4 rounded-lg shadow-md border border-gray-300 hover:bg-gray-100 cursor-pointer\"\r\n            >\r\n              <span className=\"font-bold\">{location.name}</span>{\" \"}\r\n              {location.condition}\r\n              <button\r\n                onClick={() => handleUpdateCondition(location.id)}\r\n                className=\"py-1 px-2 ml-2 bg-green-500 hover:bg-green-600 text-white rounded-lg shadow-md\"\r\n              >\r\n                Full\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}